{"remainingRequest":"C:\\Users\\Eliel\\OneDrive\\√Årea de Trabalho\\Dev\\vue2-dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Eliel\\OneDrive\\√Årea de Trabalho\\Dev\\vue2-dashboard\\src\\components\\ProductsTable.vue?vue&type=style&index=0&id=8115706c&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\Eliel\\OneDrive\\√Årea de Trabalho\\Dev\\vue2-dashboard\\src\\components\\ProductsTable.vue","mtime":1744390935329},{"path":"C:\\Users\\Eliel\\OneDrive\\√Årea de Trabalho\\Dev\\vue2-dashboard\\node_modules\\css-loader\\dist\\cjs.js","mtime":1744382678959},{"path":"C:\\Users\\Eliel\\OneDrive\\√Årea de Trabalho\\Dev\\vue2-dashboard\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1744382684328},{"path":"C:\\Users\\Eliel\\OneDrive\\√Årea de Trabalho\\Dev\\vue2-dashboard\\node_modules\\postcss-loader\\src\\index.js","mtime":1744382681122},{"path":"C:\\Users\\Eliel\\OneDrive\\√Årea de Trabalho\\Dev\\vue2-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1744382677713},{"path":"C:\\Users\\Eliel\\OneDrive\\√Årea de Trabalho\\Dev\\vue2-dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":1744382682962}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5lbnRyaWVzLWNvbnRyb2wgew0KICAgIG1hcmdpbi1ib3R0b206IDhweDsNCn0NCg0KYnV0dG9uIHsNCiAgICBtYXJnaW46IDRweCAwOw0KICAgIHBhZGRpbmc6IDZweCAxMnB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KdGFibGUgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7DQogICAgbWFyZ2luLXRvcDogOHB4Ow0KfQ0KDQp0aCwNCnRkIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOw0KICAgIHBhZGRpbmc6IDhweDsNCiAgICB0ZXh0LWFsaWduOiBsZWZ0Ow0KfQ0KDQoucGFnaW5hdGlvbiB7DQogICAgbWFyZ2luOiAxMnB4IDA7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KfQ0KDQoucGFnaW5hdGlvbiBzcGFuIHsNCiAgICBtYXJnaW46IDAgOHB4Ow0KfQ0K"},{"version":3,"sources":["ProductsTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"ProductsTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <!-- 1) Dropdown de entradas -->\r\n        <div class=\"entries-control\">\r\n            <label>\r\n                Show\r\n                <select v-model.number=\"perPage\">\r\n                    <option :value=\"5\">5</option>\r\n                    <option :value=\"10\">10</option>\r\n                    <option :value=\"50\">50</option>\r\n                </select>\r\n                entries\r\n            </label>\r\n        </div>\r\n\r\n        <!-- 2) Bot√£o de adicionar -->\r\n        <button @click=\"openForm()\">+ Add Customer</button>\r\n\r\n        <!-- 3) Tabela de produtos/clientes -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Tracking ID</th>\r\n                    <th>Product</th>\r\n                    <th>Customer</th>\r\n                    <th>Date</th>\r\n                    <th>Amount</th>\r\n                    <th>Payment Mode</th>\r\n                    <th>Status</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"item in paged\" :key=\"item.id\">\r\n                    <td>{{ item.trackingId }}</td>\r\n                    <td>{{ item.product }}</td>\r\n                    <td>{{ item.customer }}</td>\r\n                    <td>{{ item.date }}</td>\r\n                    <td>${{ Number(item.amount).toFixed(2) }}</td>\r\n                    <td>{{ item.paymentMode }}</td>\r\n                    <td>{{ item.status }}</td>\r\n                    <td>\r\n                        <button @click=\"openForm(item)\">‚úèÔ∏è</button>\r\n                        <button @click=\"openConfirm(item)\">üóëÔ∏è</button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n        <!-- 4) Pagina√ß√£o -->\r\n        <div class=\"pagination\">\r\n            <button @click=\"prev\" :disabled=\"page === 1\">Prev</button>\r\n            <span>Page {{ page }} / {{ maxPage }}</span>\r\n            <button @click=\"next\" :disabled=\"page >= maxPage\">Next</button>\r\n        </div>\r\n\r\n        <!-- 5) Modais -->\r\n        <ModalForm v-if=\"showForm\" :item=\"current\" @saved=\"reload\" @close=\"showForm = false\" />\r\n        <ConfirmDialog v-if=\"showConfirm\" @confirm=\"remove\" @cancel=\"showConfirm = false\" />\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport axios from 'axios'\r\nimport ModalForm from './ModalForm.vue'\r\nimport ConfirmDialog from './ConfirmDialog.vue'\r\n\r\nexport default {\r\n    props: ['searchTerm'],\r\n    components: { ModalForm, ConfirmDialog },\r\n    data: () => ({\r\n        list: [],\r\n        page: 1,\r\n        perPage: 5,\r\n        showForm: false,\r\n        showConfirm: false,\r\n        current: null\r\n    }),\r\n    computed: {\r\n        filteredList() {\r\n            const term = this.searchTerm.trim().toLowerCase()\r\n            if (!term) return this.list\r\n            return this.list.filter(item =>\r\n                Object.values(item).some(val =>\r\n                    String(val).toLowerCase().includes(term)\r\n                )\r\n            )\r\n        },\r\n        maxPage() {\r\n            return Math.ceil(this.filteredList.length / this.perPage)\r\n        },\r\n        paged() {\r\n            const start = (this.page - 1) * this.perPage\r\n            return this.filteredList.slice(start, start + this.perPage)\r\n        }\r\n    },\r\n    created() {\r\n        this.reload()\r\n    },\r\n    methods: {\r\n        reload() {\r\n            axios.get('http://localhost:3000/products').then(r => this.list = r.data)\r\n        },\r\n        prev() {\r\n            this.page = Math.max(1, this.page - 1)\r\n        },\r\n        next() {\r\n            this.page = Math.min(this.maxPage, this.page + 1)\r\n        },\r\n        openForm(item) {\r\n            this.current = item ? { ...item } : null\r\n            this.showForm = true\r\n        },\r\n        openConfirm(item) {\r\n            this.current = item\r\n            this.showConfirm = true\r\n        },\r\n        remove() {\r\n            axios.delete(`http://localhost:3000/products/${this.current.id}`)\r\n                .then(() => {\r\n                    this.reload()\r\n                    this.showConfirm = false\r\n                })\r\n        }\r\n    }\r\n}\r\n</script>\r\n  \r\n<style scoped>\r\n.entries-control {\r\n    margin-bottom: 8px;\r\n}\r\n\r\nbutton {\r\n    margin: 4px 0;\r\n    padding: 6px 12px;\r\n    cursor: pointer;\r\n}\r\n\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-top: 8px;\r\n}\r\n\r\nth,\r\ntd {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n    text-align: left;\r\n}\r\n\r\n.pagination {\r\n    margin: 12px 0;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.pagination span {\r\n    margin: 0 8px;\r\n}\r\n</style>\r\n  "]}]}